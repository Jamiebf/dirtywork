This is pdfTeX, Version 3.14159265-2.6-1.40.19 (MiKTeX 2.9.6730 64-bit) (preloaded format=pdflatex 2018.8.16)  1 MAR 2020 01:17
entering extended mode
**./ASharedMemoryImplementationForXv6.tex
(ASharedMemoryImplementationForXv6.tex
LaTeX2e <2018-04-01> patch level 5
("C:\Program Files\MiKTeX 2.9\tex\latex\base\article.cls"
Document Class: article 2014/09/29 v1.4h Standard LaTeX document class
("C:\Program Files\MiKTeX 2.9\tex\latex\base\size12.clo"
File: size12.clo 2014/09/29 v1.4h Standard LaTeX file (size option)
)
\c@part=\count80
\c@section=\count81
\c@subsection=\count82
\c@subsubsection=\count83
\c@paragraph=\count84
\c@subparagraph=\count85
\c@figure=\count86
\c@table=\count87
\abovecaptionskip=\skip41
\belowcaptionskip=\skip42
\bibindent=\dimen102
)
(ASharedMemoryImplementationForXv6.aux)
\openout1 = `ASharedMemoryImplementationForXv6.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 2.
LaTeX Font Info:    ... okay on input line 2.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 2.
LaTeX Font Info:    ... okay on input line 2.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 2.
LaTeX Font Info:    ... okay on input line 2.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 2.
LaTeX Font Info:    ... okay on input line 2.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 2.
LaTeX Font Info:    ... okay on input line 2.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 2.
LaTeX Font Info:    ... okay on input line 2.
 [1

{C:/Users/LMC/AppData/Local/MiKTeX/2.9/pdftex/config/pdftex.map}] [2]
Overfull \hbox (85.47523pt too wide) in paragraph at lines 143--143
[]\OT1/cmtt/m/n/12 + extern void mappages(pde_t *pgdir, void *va, uint size, ui
nt pa, int perm);[] 
 []

[3]
Overfull \hbox (79.30023pt too wide) in paragraph at lines 143--143
[]\OT1/cmtt/m/n/12 +     mappages(np->pgdir, (char *)SHARED_V, PGSIZE, v2p(proc
->shared->page),[] 
 []


Overfull \hbox (60.77522pt too wide) in paragraph at lines 178--178
[]  \OT1/cmtt/m/n/12 enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNI
NG, ZOMBIE };[] 
 []


Overfull \hbox (17.5502pt too wide) in paragraph at lines 178--178
[]\OT1/cmtt/m/n/12 + // The virtual address where shared memory appears, if req
uested[] 
 []

[4]
Overfull \hbox (17.5502pt too wide) in paragraph at lines 178--178
[]    \OT1/cmtt/m/n/12 uint sz;                     // Size of process memory (
bytes)[] 
 []


Overfull \hbox (11.3752pt too wide) in paragraph at lines 178--178
[]    \OT1/cmtt/m/n/12 int killed;                  // If non-zero, have been k
illed[] 
 []


Overfull \hbox (29.9002pt too wide) in paragraph at lines 178--178
[]\OT1/cmtt/m/n/12 +   struct shared *shared;       // Shared memory record (0 
-> none)[] 
 []


Overfull \hbox (42.25021pt too wide) in paragraph at lines 178--178
[]\OT1/cmtt/m/n/12 + //   (optionally) fixed-sized shared mem segment, 1 page @
 0x7000000[] 
 []

[5]
Overfull \hbox (60.77522pt too wide) in paragraph at lines 241--241
[]\OT1/cmtt/m/n/12 + extern void mappages(pde_t *pgdir,void *va,uint size,uint 
pa,int perm);[] 
 []

[6]
Overfull \hbox (5.2002pt too wide) in paragraph at lines 241--241
[]\OT1/cmtt/m/n/12 +     mappages(proc->pgdir,(char*)SHARED_V,PGSIZE,v2p(sh->pa
ge),[] 
 []

[7] [8]
Overfull \hbox (42.25021pt too wide) in paragraph at lines 348--348
[]  \OT1/cmtt/m/n/12 @@ -67,7 +67,7 @@ walkpgdir(pde_t *pgdir, const void *va, 
int alloc)[] 
 []


Overfull \hbox (23.7252pt too wide) in paragraph at lines 348--348
[]  \OT1/cmtt/m/n/12 // Create PTEs for virtual addresses starting at va that r
efer to[] 
 []


Overfull \hbox (5.2002pt too wide) in paragraph at lines 348--348
[]  \OT1/cmtt/m/n/12 mappages(pde_t *pgdir, void *va, uint size, uint pa, int p
erm)[] 
 []


Overfull \hbox (29.9002pt too wide) in paragraph at lines 348--348
[]  \OT1/cmtt/m/n/12 @@ -223,7 +223,7 @@ allocuvm(pde_t *pgdir, uint oldsz, uin
t newsz)[] 
 []

[9] [10] [11] [12]
Overfull \hbox (48.42522pt too wide) in paragraph at lines 577--577
[]\OT1/cmtt/m/n/12 extern void mappages(pde_t *pgdir,void *va,uint size,uint pa
,int perm);[] 
 []

[13]
Overfull \hbox (60.77522pt too wide) in paragraph at lines 577--577
[]    \OT1/cmtt/m/n/12 mappages(np->pgdir,(char*)SHARED_V,PGSIZE,V2P(curproc->s
hared->page),[] 
 []

[14] [15]
Overfull \hbox (23.7252pt too wide) in paragraph at lines 577--577
[]    \OT1/cmtt/m/n/12 // Wait for children to exit.  (See wakeup1 call in proc
_exit.)[] 
 []


Overfull \hbox (48.42522pt too wide) in paragraph at lines 628--628
[]\OT1/cmtt/m/n/12 enum procstate { UNUSED, EMBRYO, SLEEPING, RUNNABLE, RUNNING
, ZOMBIE };[] 
 []


Overfull \hbox (5.2002pt too wide) in paragraph at lines 628--628
[]\OT1/cmtt/m/n/12 // The virtual address where shared memory appears, if reque
sted[] 
 []


Overfull \hbox (5.2002pt too wide) in paragraph at lines 628--628
[]  \OT1/cmtt/m/n/12 uint sz;                     // Size of process memory (by
tes)[] 
 []


Overfull \hbox (60.77522pt too wide) in paragraph at lines 628--628
[]  \OT1/cmtt/m/n/12 char *kstack;                // Bottom of kernel stack for
 this process[] 
 []


Overfull \hbox (5.2002pt too wide) in paragraph at lines 628--628
[]  \OT1/cmtt/m/n/12 struct trapframe *tf;        // Trap frame for current sys
call[] 
 []

[16]
Overfull \hbox (17.5502pt too wide) in paragraph at lines 628--628
[]  \OT1/cmtt/m/n/12 struct shared *shared;       // Shared memory record (0 ->
 none)[] 
 []


Overfull \hbox (5.2002pt too wide) in paragraph at lines 628--628
[]\OT1/cmtt/m/n/12 // Process memory is laid out contiguously, low addresses fi
rst:[] 
 []


Overfull \hbox (36.07521pt too wide) in paragraph at lines 628--628
[]\OT1/cmtt/m/n/12 //   (optionally) fixed-sized shared mem segment, 1 page @ 0
x70000000[] 
 []

[17] [18]
Overfull \hbox (73.12523pt too wide) in paragraph at lines 714--714
[]\OT1/cmtt/m/n/12 extern void mappages(pde_t *pgdir, void *va, uint size, uint
 pa, int perm);[] 
 []


Overfull \hbox (104.00024pt too wide) in paragraph at lines 714--714
[]    \OT1/cmtt/m/n/12 mappages(proc->pgdir, (char *)SHARED_V, PGSIZE, V2P(sh->
page), PTE_W|PTE_U);[] 
 []

[19] [20] [21] [22] [23]
Overfull \hbox (11.3752pt too wide) in paragraph at lines 1001--1001
[]\OT1/cmtt/m/n/12 // Create PTEs for virtual addresses starting at va that ref
er to[] 
 []

[24]
Overfull \hbox (11.3752pt too wide) in paragraph at lines 1001--1001
[]\OT1/cmtt/m/n/12 // There is one page table per process, plus one that's used
 when[] 
 []


Overfull \hbox (11.3752pt too wide) in paragraph at lines 1001--1001
[]\OT1/cmtt/m/n/12 // a CPU is not running any process (kpgdir). The kernel use
s the[] 
 []


Overfull \hbox (23.7252pt too wide) in paragraph at lines 1001--1001
[]\OT1/cmtt/m/n/12 // current process's page table during system calls and inte
rrupts;[] 
 []


Overfull \hbox (11.3752pt too wide) in paragraph at lines 1001--1001
[]\OT1/cmtt/m/n/12 // page protection bits prevent user code from using the ker
nel's[] 
 []


Overfull \hbox (23.7252pt too wide) in paragraph at lines 1001--1001
[]\OT1/cmtt/m/n/12 //   KERNBASE..KERNBASE+EXTMEM: mapped to 0..EXTMEM (for I/O
 space)[] 
 []


Overfull \hbox (17.5502pt too wide) in paragraph at lines 1001--1001
[]\OT1/cmtt/m/n/12 //                                  rw data + free physical 
memory[] 
 []


Overfull \hbox (54.60022pt too wide) in paragraph at lines 1001--1001
[]\OT1/cmtt/m/n/12 // The kernel allocates physical memory for its heap and for
 user memory[] 
 []


Overfull \hbox (60.77522pt too wide) in paragraph at lines 1001--1001
[]\OT1/cmtt/m/n/12 // Allocate page tables and physical memory to grow process 
from oldsz to[] 
 []


Overfull \hbox (66.95023pt too wide) in paragraph at lines 1001--1001
[]\OT1/cmtt/m/n/12 // newsz, which need not be page aligned.  Returns new size 
or 0 on error.[] 
 []

[25]
Overfull \hbox (36.07521pt too wide) in paragraph at lines 1001--1001
[]    \OT1/cmtt/m/n/12 if(mappages(pgdir, (char*)a, PGSIZE, V2P(mem), PTE_W|PTE
_U) < 0){[] 
 []

[26] [27] [28] (ASharedMemoryImplementationForXv6.aux) ) 
Here is how much of TeX's memory you used:
 219 strings out of 492973
 2897 string characters out of 3135938
 63682 words of memory out of 3000000
 4172 multiletter control sequences out of 15000+200000
 5487 words of font info for 21 fonts, out of 3000000 for 9000
 1141 hyphenation exceptions out of 8191
 22i,4n,19p,178b,249s stack positions out of 5000i,500n,10000p,200000b,50000s
<C:/Program Files/MiKTe
X 2.9/fonts/type1/public/amsfonts/cm/cmbx12.pfb><C:/Program Files/MiKTeX 2.9/fo
nts/type1/public/amsfonts/cm/cmr12.pfb><C:/Program Files/MiKTeX 2.9/fonts/type1
/public/amsfonts/cm/cmtt12.pfb>
Output written on ASharedMemoryImplementationForXv6.pdf (28 pages, 77432 bytes)
.
PDF statistics:
 104 PDF objects out of 1000 (max. 8388607)
 0 named destinations out of 1000 (max. 500000)
 1 words of extra memory for PDF output out of 10000 (max. 10000000)

